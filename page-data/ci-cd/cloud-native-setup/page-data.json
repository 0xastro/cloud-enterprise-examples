{"componentChunkName":"component---src-pages-ci-cd-cloud-native-setup-index-mdx","path":"/ci-cd/cloud-native-setup/","result":{"pageContext":{"frontmatter":{"title":"Install CNCF DevOps Tools using Schematics"},"relativePagePath":"/ci-cd/cloud-native-setup/index.mdx","titleType":"page","MdxNode":{"id":"f07a39b1-32f7-5740-bf38-0ad403d6529f","children":[],"parent":"7469363e-f757-5f16-b3d8-2cb7f1cb2ade","internal":{"content":"---\ntitle: Install CNCF DevOps Tools using Schematics\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<Tabs>\n\n<Tab label=\"Prerequisites\">\n\n<PageDescription>\n\nPrepare to run Terraform to install the CNCF DevOps Tools into an existing IBM Cloud managed OpenShift or Kubernetes cluster\n\n</PageDescription>\n\nThe <Globals name=\"env\" /> is installed by an cloud account administrator, who will run the IasC to create the environment in an IBM Cloud account. The scripts will run as the environment administrator's user. These instructions explain how to configure and run the Terraform (IasC) scripts to create the <Globals name=\"env\" />.\n\n<InlineNotification>\n\n**Note**: The Terraform scripts will clean up the cluster to remove any existing installation that may have been previously been installed.\n</InlineNotification>\n\n### Confirm permissions\n\nOptional: To help confirm that the scripts will have the permissions they'll require, the environment administrator may log into the account and test creating a couple of resources:\n- [Create a cluster](https://cloud.ibm.com/kubernetes/catalog/cluster/create) -- Make it single-zone, and specify the proper data center and resource group\n- Create a namespace in the image registry\n\nAs long as the user can create these resources successfully the schematics terraform script will be able to apply its state to the cluster.\n\n</Tab>\n\n<Tab label=\"Schematics\">\n\n<PageDescription>\n\nConfigure IBM Cloud Schematics with Terraform infrastructure-as-code (IasC) scripts that will install the tools into your IBM Cloud managed cluster.\n\n</PageDescription>\n\n- This link [Cloud Native Toolkit](https://github.com/ibm-garage-cloud/cloudnative-toolkit) will give you more information about the Terraform that is used to install the tools.\n\n- Create a workspace in IBM Schematics service and call it `cloud-native-toolkit` and place it in your nominate resource group.\n\n- On the Settings view import your terraform template\n    ```bash\n    https://github.com/ibm-garage-cloud/cloudnative-toolkit\n    ```\n- select `terraform_v0.12` version from the Terraform version drop down\n\n- click **Save template information**\n\n</Tab>\n\n<Tab label=\"Variables\">\n\n<PageDescription>\n\nTo support the running of the Terraform for the CNCF DevSecOps installation configure your variables\n\n</PageDescription>\n\nThe installation requires a set of terraform variables to be set for your environment. The Terraform assumes that a cluster has already been created and the CNCF tools are installed into an existing cluster.\n\n| **Variable**   | **Description**  | **eg. Value**  |\n|---|---|---|\n| `ibmcloud_api_key` | The API key from IBM Cloud Console that support service creation access writes  | `{guid API key from Console}`  |\n|  `resource_group_name` | The name of the resource group where the cluster is created  | `dev-team-one`  |\n|  `cluster_type`       |  The name of the IKS cluster |  `kubernetes or ocp4` |\n|  `cluster_name`       |  The name of the IKS cluster |  `dev-team-one-iks-117-vp` |\n|  `cluster_exists`     |  Does the cluster exist already | `true`  |\n|  `vpc_cluster`        | Is the cluster created in VPC  | `true`  |\n\n### Environment variables\n\n<p/>\n\nSet them based on the existing cluster:\n- `resource_group_name` -- The existing cluster's resource group\n- `cluster_exists` -- Set to `true` for an existing cluster\n- `cluster_type` -- Specify the existing cluster's type\n    - **kubernetes** -- Kubernetes\n    - **openshift** -- OpenShift v3\n    - **ocp3** -- OpenShift v3\n    - **ocp4** -- OpenShift v4\n- `cluster_name` -- The existing cluster's name\n\n<p/>\n\n<InlineNotification>\n\n**Note**: The values for `resource_group_name` and `cluster_name` can be found on the Resource List\npage in the IBM Cloud Console - https://cloud.ibm.com/resources\n\n</InlineNotification>\n\n<p/>\n\n</Tab>\n\n<Tab label=\"Apply\">\n\n<PageDescription>\n\nApply the Terraform Schematics workspace\n\n</PageDescription>\n\n- Having configured the variables for the workspace you can now apply it\n    <InlineNotification>\n\n    **Note**: If you run this approach multiple times remember to delete any pre existing cloud services that were created previously\n\n    </InlineNotification>\n\n- Navigate to the Workspace you have configured `cloud-native-toolkit`\n- Click on the **Apply**\n\n    Installing the tools into an existing cluster takes about 30 minutes. You can view the workspace logs to see the progress of the execution of the Schematics Terraform scripts\n\n- Once the tools are installed with Terraform using IBM Cloud Schematics you will see this message in the logs\n    ```\n     2020/06/01 10:55:46 Terraform apply |\n     2020/06/01 10:55:46 Terraform apply | Apply complete! Resources: 59 added, 0 changed, 0 destroyed.\n     2020/06/01 10:55:46 Terraform apply |\n     2020/06/01 10:55:46 Terraform apply | The state of your infrastructure has been saved to the path\n     2020/06/01 10:55:46 Terraform apply | below. This state is required to modify and destroy your\n     2020/06/01 10:55:46 Terraform apply | infrastructure, so keep it safe. To inspect the complete state\n     2020/06/01 10:55:46 Terraform apply | use the `terraform show` command.\n     2020/06/01 10:55:46 Terraform apply |\n     2020/06/01 10:55:46 Terraform apply | State path: ./state/terraform.tfstate\n     2020/06/01 10:55:46 Command finished successfully.\n\n     2020/06/01 10:55:46 -----  Terraform SHOW  -----\n     2020/06/01 10:55:46 Starting command: terraform show -no-color\n     2020/06/01 10:55:51 Terraform show | No state.\n     2020/06/01 10:55:51 Command finished successfully.\n     ```\n\n- End of the installation process\n\n    <InlineNotification kind=\"success\">\n\n    You have now successfully provisioned and configured the CNCF DevOps Tools. Enjoy!\n\n    </InlineNotification>\n\n### <Globals name=\"env\" />\n\nOnce the Schematics scripts have finished, you can see the resources that the scripts created in IBM Cloud:\n- In the IBM Cloud console, open the [Resource List](https://cloud.ibm.com/docs/overview?topic=overview-ui#dashboardview \"Managing resources in the resource list\")\n- On the Resource List page, filter by your Resource Group (e.g. `dev-team-one`)\n- You should see these resources listed:\n    - **Clusters**: 1, either Kubernetes or OpenShift\n- Select the cluster and open the Kubernetes dashboard or OpenShift web console. You should see:\n    - Namespaces: `tools`, `dev`, `test`, and `staging`\n    - Deployments in the `tools` namespace: `developer-dashboard`, `jenkins`, etc.\n\nTo get started open the Developer Dashboard or navigate to the tools using the OpenShift Tools menu.\n\n- To complete the setup install the Developer tools into the IBM Cloud Shell [Cloud Native - Developer Tools](/ci-cd/cloud-native-setup-tools)\n\n### Possible issues\n\nIf you find that that the Terraform provisioning has failed, try deleting the workshpace and configuring it again\n\n</Tab>\n\n<Tab label=\"Post Install\">\n\n<PageDescription>\n\nPost Installation steps\n\n</PageDescription>\n\n- Two of the default tools that were installed **Artifactory** and **ArgoCD** require some post installation configuration.\n- Complete these steps documented here for [Artifactory Configuration](cloud-native-setup/artifactory-setup)\n- Complete these steps documented here for [ArgoCD Configuration](cloud-native-setup/argo-setup)\n\n</Tab>\n\n</Tabs>\n\n","type":"Mdx","contentDigest":"678401db08ece9338072e97b2d963a61","counter":734,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Install CNCF DevOps Tools using Schematics"},"exports":{},"rawBody":"---\ntitle: Install CNCF DevOps Tools using Schematics\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<Tabs>\n\n<Tab label=\"Prerequisites\">\n\n<PageDescription>\n\nPrepare to run Terraform to install the CNCF DevOps Tools into an existing IBM Cloud managed OpenShift or Kubernetes cluster\n\n</PageDescription>\n\nThe <Globals name=\"env\" /> is installed by an cloud account administrator, who will run the IasC to create the environment in an IBM Cloud account. The scripts will run as the environment administrator's user. These instructions explain how to configure and run the Terraform (IasC) scripts to create the <Globals name=\"env\" />.\n\n<InlineNotification>\n\n**Note**: The Terraform scripts will clean up the cluster to remove any existing installation that may have been previously been installed.\n</InlineNotification>\n\n### Confirm permissions\n\nOptional: To help confirm that the scripts will have the permissions they'll require, the environment administrator may log into the account and test creating a couple of resources:\n- [Create a cluster](https://cloud.ibm.com/kubernetes/catalog/cluster/create) -- Make it single-zone, and specify the proper data center and resource group\n- Create a namespace in the image registry\n\nAs long as the user can create these resources successfully the schematics terraform script will be able to apply its state to the cluster.\n\n</Tab>\n\n<Tab label=\"Schematics\">\n\n<PageDescription>\n\nConfigure IBM Cloud Schematics with Terraform infrastructure-as-code (IasC) scripts that will install the tools into your IBM Cloud managed cluster.\n\n</PageDescription>\n\n- This link [Cloud Native Toolkit](https://github.com/ibm-garage-cloud/cloudnative-toolkit) will give you more information about the Terraform that is used to install the tools.\n\n- Create a workspace in IBM Schematics service and call it `cloud-native-toolkit` and place it in your nominate resource group.\n\n- On the Settings view import your terraform template\n    ```bash\n    https://github.com/ibm-garage-cloud/cloudnative-toolkit\n    ```\n- select `terraform_v0.12` version from the Terraform version drop down\n\n- click **Save template information**\n\n</Tab>\n\n<Tab label=\"Variables\">\n\n<PageDescription>\n\nTo support the running of the Terraform for the CNCF DevSecOps installation configure your variables\n\n</PageDescription>\n\nThe installation requires a set of terraform variables to be set for your environment. The Terraform assumes that a cluster has already been created and the CNCF tools are installed into an existing cluster.\n\n| **Variable**   | **Description**  | **eg. Value**  |\n|---|---|---|\n| `ibmcloud_api_key` | The API key from IBM Cloud Console that support service creation access writes  | `{guid API key from Console}`  |\n|  `resource_group_name` | The name of the resource group where the cluster is created  | `dev-team-one`  |\n|  `cluster_type`       |  The name of the IKS cluster |  `kubernetes or ocp4` |\n|  `cluster_name`       |  The name of the IKS cluster |  `dev-team-one-iks-117-vp` |\n|  `cluster_exists`     |  Does the cluster exist already | `true`  |\n|  `vpc_cluster`        | Is the cluster created in VPC  | `true`  |\n\n### Environment variables\n\n<p/>\n\nSet them based on the existing cluster:\n- `resource_group_name` -- The existing cluster's resource group\n- `cluster_exists` -- Set to `true` for an existing cluster\n- `cluster_type` -- Specify the existing cluster's type\n    - **kubernetes** -- Kubernetes\n    - **openshift** -- OpenShift v3\n    - **ocp3** -- OpenShift v3\n    - **ocp4** -- OpenShift v4\n- `cluster_name` -- The existing cluster's name\n\n<p/>\n\n<InlineNotification>\n\n**Note**: The values for `resource_group_name` and `cluster_name` can be found on the Resource List\npage in the IBM Cloud Console - https://cloud.ibm.com/resources\n\n</InlineNotification>\n\n<p/>\n\n</Tab>\n\n<Tab label=\"Apply\">\n\n<PageDescription>\n\nApply the Terraform Schematics workspace\n\n</PageDescription>\n\n- Having configured the variables for the workspace you can now apply it\n    <InlineNotification>\n\n    **Note**: If you run this approach multiple times remember to delete any pre existing cloud services that were created previously\n\n    </InlineNotification>\n\n- Navigate to the Workspace you have configured `cloud-native-toolkit`\n- Click on the **Apply**\n\n    Installing the tools into an existing cluster takes about 30 minutes. You can view the workspace logs to see the progress of the execution of the Schematics Terraform scripts\n\n- Once the tools are installed with Terraform using IBM Cloud Schematics you will see this message in the logs\n    ```\n     2020/06/01 10:55:46 Terraform apply |\n     2020/06/01 10:55:46 Terraform apply | Apply complete! Resources: 59 added, 0 changed, 0 destroyed.\n     2020/06/01 10:55:46 Terraform apply |\n     2020/06/01 10:55:46 Terraform apply | The state of your infrastructure has been saved to the path\n     2020/06/01 10:55:46 Terraform apply | below. This state is required to modify and destroy your\n     2020/06/01 10:55:46 Terraform apply | infrastructure, so keep it safe. To inspect the complete state\n     2020/06/01 10:55:46 Terraform apply | use the `terraform show` command.\n     2020/06/01 10:55:46 Terraform apply |\n     2020/06/01 10:55:46 Terraform apply | State path: ./state/terraform.tfstate\n     2020/06/01 10:55:46 Command finished successfully.\n\n     2020/06/01 10:55:46 -----  Terraform SHOW  -----\n     2020/06/01 10:55:46 Starting command: terraform show -no-color\n     2020/06/01 10:55:51 Terraform show | No state.\n     2020/06/01 10:55:51 Command finished successfully.\n     ```\n\n- End of the installation process\n\n    <InlineNotification kind=\"success\">\n\n    You have now successfully provisioned and configured the CNCF DevOps Tools. Enjoy!\n\n    </InlineNotification>\n\n### <Globals name=\"env\" />\n\nOnce the Schematics scripts have finished, you can see the resources that the scripts created in IBM Cloud:\n- In the IBM Cloud console, open the [Resource List](https://cloud.ibm.com/docs/overview?topic=overview-ui#dashboardview \"Managing resources in the resource list\")\n- On the Resource List page, filter by your Resource Group (e.g. `dev-team-one`)\n- You should see these resources listed:\n    - **Clusters**: 1, either Kubernetes or OpenShift\n- Select the cluster and open the Kubernetes dashboard or OpenShift web console. You should see:\n    - Namespaces: `tools`, `dev`, `test`, and `staging`\n    - Deployments in the `tools` namespace: `developer-dashboard`, `jenkins`, etc.\n\nTo get started open the Developer Dashboard or navigate to the tools using the OpenShift Tools menu.\n\n- To complete the setup install the Developer tools into the IBM Cloud Shell [Cloud Native - Developer Tools](/ci-cd/cloud-native-setup-tools)\n\n### Possible issues\n\nIf you find that that the Terraform provisioning has failed, try deleting the workshpace and configuring it again\n\n</Tab>\n\n<Tab label=\"Post Install\">\n\n<PageDescription>\n\nPost Installation steps\n\n</PageDescription>\n\n- Two of the default tools that were installed **Artifactory** and **ArgoCD** require some post installation configuration.\n- Complete these steps documented here for [Artifactory Configuration](cloud-native-setup/artifactory-setup)\n- Complete these steps documented here for [ArgoCD Configuration](cloud-native-setup/argo-setup)\n\n</Tab>\n\n</Tabs>\n\n","fileAbsolutePath":"/Users/johandry/Workspace/ibm/att-cloudnative/ibmcloud-pattern-guide/src/pages/ci-cd/cloud-native-setup/index.mdx"}}}}